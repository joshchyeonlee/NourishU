"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _AuthContext = _interopRequireDefault(require("./AuthContext"));
var _hooks = require("./utils/hooks");
var _reducers = require("./utils/reducers");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function AuthProvider(_ref) {
  var store = _ref.store,
    children = _ref.children;
  var tokenObject = store.tokenObject,
    refresh = store.refresh;
  if (refresh) {
    (0, _hooks.useInterval)(function () {
      var _tokenObject$value$au, _tokenObject$value$re;
      refresh.refreshApiCallback({
        authToken: (_tokenObject$value$au = tokenObject.value.auth) === null || _tokenObject$value$au === void 0 ? void 0 : _tokenObject$value$au.token,
        authUserState: tokenObject.value.userState,
        refreshToken: (_tokenObject$value$re = tokenObject.value.refresh) === null || _tokenObject$value$re === void 0 ? void 0 : _tokenObject$value$re.token
      }).then(function (result) {
        if (result.isSuccess) {
          tokenObject.set((0, _reducers.doRefresh)(result));
        } else {
          tokenObject.set((0, _reducers.doSignOut)());
        }
      }).catch(function () {});
    }, tokenObject.value.isSignIn ? refresh.interval : null);
  }
  return (0, _jsxRuntime.jsx)(_AuthContext.default.Provider, {
    value: tokenObject,
    children: children
  });
}
AuthProvider.defaultProps = {
  cookieDomain: window.location.hostname,
  cookieSecure: window.location.protocol === 'https:'
};
var _default = exports.default = AuthProvider;